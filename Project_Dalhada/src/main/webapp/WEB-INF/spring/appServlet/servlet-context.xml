<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/vendor/**" location="/resources/vendor/" />
	<resources mapping="/bucket/**" location="/resources/images/bucket/" />

	<!-- jsonView -->
	<beans:bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
   		<beans:property name="contentType" value="application/json;charset=UTF-8"/>
	</beans:bean>
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.dalhada" />
		<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />


	<context:component-scan base-package="dao"/>
	<context:component-scan base-package="service"/>
	<context:component-scan base-package="vo"/>
	<context:component-scan base-package="service"/>
	
	
	<beans:bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
	<beans:property value="oracle.jdbc.OracleDriver" name="driverClassName"/>
	<beans:property value="jdbc:oracle:thin:@70.12.113.183:1521:XE" name="url"/>
	<beans:property value="project" name="username"/>
	<beans:property value="project" name="password"/>
	</beans:bean>
	
	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:mybatis-config.xml" />
      	<beans:property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml" />
	</beans:bean>

	
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
	<beans:bean id="NaverLoginVO" class="vo.NaverLoginVO" />

</beans:beans>
